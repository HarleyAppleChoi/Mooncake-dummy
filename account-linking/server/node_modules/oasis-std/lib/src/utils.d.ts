/// <reference types="node" />
export declare type TypedArray = Uint8Array | Uint8ClampedArray | Int8Array | Uint16Array | Int16Array | Uint32Array | Int32Array | BigUint64Array | BigInt64Array | Float32Array | Float64Array;
/** Parses a (possibly 0x-prefixed) big-endian hex string into bytes */
export declare function decodeHex(hex: string): Uint8Array;
/** Converts a byte array into a 0x-prefixed big-endian hex string. */
export declare function encodeHex(bytes: Uint8Array): string;
export declare function fetchBytecode(bytecodeUrl: string): Promise<Uint8Array>;
/**
 * Zero-copy `Uint8Array` -> `Buffer` conversion. Useful for getting the
 * `Buffer` prototype on bytes returned by other (i.e. oasis.js) functions.
 */
export declare function typedArrayToBuffer(arr: TypedArray): Buffer;
export declare function unreachable(condition: never, errMsg: string): void;
